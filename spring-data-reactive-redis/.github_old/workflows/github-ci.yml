name: Deploy Spring boot to ACA

on:
  push:
    branches: [ main ]

env:
  APP_NAME: reactive-redis

  AZURE_RESOURCE_GROUP: rg-cc-redis-demo-01
#  AZURE_CONTAINER_REGISTRY_NAME: k8smarketdataregistry
#  AZURE_KUBERNETES_CLUSTER_NAME: marketdatacluster

  SPRING_PROFILES_ACTIVE_DEPLOY: cloud

  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  package-containerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: hashicorp/setup-terraform@v2.0.3

      - name: 'Checkout repo'
        uses: actions/checkout@v2

      - name: 'Set up JDK 17'
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: 'Package with maven'
        run: mvn package
#        env:
#          API_KEY: ${{ secrets.API_KEY }}

      - name: 'Save artifact'
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.APP_NAME }}
          path: target

      - name: 'Azure login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy Resources to Azure using terraform'
        id: tf_deploys
        run: |
          pushd terraform
            terraform init
            terraform fmt
            terraform validate
            terraform plan
            terraform apply --auto-approve
          popd

#      - name: 'Push to Azure Container Registry'
#        run: |
#          docker build -t ${{ env.APP_NAME }} .
#          az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}
#          docker tag ${{ env.APP_NAME }}:latest ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
#          docker push ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
#          registry_images=$(az acr repository list --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }} --output table)
#          echo "Registry image list = $registry_images"
#
#      - name: 'Deploy to Azure Kubernetes Cluster'
#        run: |
#          az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_KUBERNETES_CLUSTER_NAME }}
#          kubectl apply -f k8s-config.yml
