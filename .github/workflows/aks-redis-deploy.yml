name: Deploy Redis Application to AKS

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: rg-definite-kitten
  AZURE_CONTAINER_REGISTRY_NAME: acraksghdemo
  APP_NAME: redis-aks

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Push to Azure Container Registry
        run: |
          docker build -t ${{ env.APP_NAME }} . -f docker/dockerfile_redis
          az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}
          docker tag ${{ env.APP_NAME }}:latest ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          registry_images=$(az acr repository list --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }} --output table)
          echo "Registry image list = $registry_images"

#      - name: 'Deploy to Azure Kubernetes Cluster'
#        run: |
#          az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AZURE_KUBERNETES_CLUSTER_NAME }}
#          kubectl apply -f k8s-config.yml
