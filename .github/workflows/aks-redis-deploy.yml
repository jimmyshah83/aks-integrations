name: Deploy Redis Application to AKS

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  actions: read

env:
  AZURE_RESOURCE_GROUP: rg-definite-kitten
  AZURE_CONTAINER_REGISTRY_NAME: acraksghdemo
  APP_NAME: redis
  AKS_CLUSTER_NAME: aksghdemo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run build with Gradle Wrapper
        run: ./gradlew build

      - name: Az login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Push to Azure Container Registry
        run: |
          docker build -t ${{ env.APP_NAME }} . -f spring-data-reactive-redis/Dockerfile
          az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}
          docker tag ${{ env.APP_NAME }}:latest ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          registry_images=$(az acr repository list --name ${{ env.AZURE_CONTAINER_REGISTRY_NAME }} --output table)
          echo "Registry image list = $registry_images"

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Set Generic Redis Secret
        shell: bash
        run: |
          kubectl delete secret/redis-secret
          kubectl create secret generic redis-secret --from-literal=HOST=${{ secrets.REDIS_HOST }} --from-literal=PASSWORD=${{ secrets.REDIS_PASSWORD }}

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: default
          manifests: |
            k8s-public-ip/redis.yml
          images: ${{ env.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:${{ github.sha }}
          pull-images: false
